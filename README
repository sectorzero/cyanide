                          cyanide 
        "slick development environment setup using Vim"

What is it
----------
This is an assembly of plugins and customizations which provides
an powerful development and editing environment on Vim. Over the
years I have experimented with various Vim setups to arrive at a
simple and rich development environment and this is a result of 
all the distillation. The goal is to provide a drop-in bundle 
which gives you all the goodness without having to go through all
the pain and effort of setup or management. This is what I use on
a daily basis heavily, so this is really a carefully assembled set
of compatible plugins and customization. If you have experienced 
the pain of unpredicatability of Vim configurations, you would 
really enjoy this. Happy Vimming!!

Acknowledgements : 
------------------
Thanks to a inspiration and learning from lot of vim gurus who have
put out thier expert vim configuration on github and elsewhere. Also
would like to thank all the inspiration gathered from Steve Francia's 
'The Ultimate Vim Configuration' to go the managed plugin way using 
Pathogen

Features 
--------
- Plugins which are really useful on a daily basis for general coding / editing
- All plugins maintained ( intalled and upgraded ) via Pathogen / Git 
- Easily customizable for individual needs - using local rx
- Integrated search using Ack, Taglist and ctrl-p
- C++ development support using clang_complete ( requires clang )
- General development support using snipmate with ease of adding custom snippets
- 'tex' editing support using latex-suite ( wiki TODO )
- Enhanced visual experience using 'solarized' colorscheme and 'powerline' status 
- Other conveniences

Vim  ( recommended )
--------------------
Vi IMproved 7.3 (2010 Aug 15, compiled Apr 20 2013 16:45:21)
MacOS X (unix) version
Modified by sectorzero
Compiled by sectorzero<sectorzero@unknown.com>
Huge version without GUI.  Features included (+) or not (-):
+arabic +autocmd -balloon_eval -browse ++builtin_terms +byte_offset +cindent
-clientserver +clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments
+conceal +cryptv +cscope +cursorbind +cursorshape +dialog_con +diff +digraphs
-dnd -ebcdic +emacs_tags +eval +ex_extra +extra_search +farsi +file_in_path
+find_in_path +float +folding -footer +fork() -gettext -hangul_input +iconv
+insert_expand +jumplist +keymap +langmap +libcall +linebreak +lispindent
+listcmds +localmap -lua +menu +mksession +modify_fname +mouse -mouseshape
+mouse_dec -mouse_gpm -mouse_jsbterm +mouse_netterm -mouse_sysmouse
+mouse_xterm +multi_byte +multi_lang -mzscheme +netbeans_intg -osfiletype
+path_extra -perl +persistent_undo +postscript +printer +profile +python
-python3 +quickfix +reltime +rightleft +ruby +scrollbind +signs +smartindent
-sniff +startuptime +statusline -sun_workshop +syntax +tag_binary
+tag_old_static -tag_any_white -tcl +terminfo +termresponse +textobjects +title
 -toolbar +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo
 +vreplace +wildignore +wildmenu +windows +writebackup -X11 -xfontset -xim -xsmp
  -xterm_clipboard -xterm_save
     system vimrc file: "$VIM/vimrc"
          user vimrc file: "$HOME/.vimrc"
                user exrc file: "$HOME/.exrc"
                  fall-back for $VIM: "/usr/local/share/vim"
                  Compilation: clang -c -I. -Iproto -DHAVE_CONFIG_H   -DMACOS_X_UNIX -no-cpp-precomp  -O2 -fno-strength-reduce -Wall -D_FORTIFY_SOURCE=1     -I/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/universal-darwin11.0 -DRUBY_VERSION=18
                  Linking: clang   -L.     -L/usr/local/lib -o vim       -lm -lncurses  -liconv -framework Cocoa     -framework Python   -lruby -lobjc

Requirements ( tested and regularly used on )
------------
- Vim 7.3
- Linux / Mac OS X

Quick Install Instructions 
--------------------------
 cd ~
 git clone git://github.com/sectorzero/cyanide.git
 git submodule init
 git submodule update
 ln -s ~/cyanide/vim/.vim
 ln -s ~/cyanide/vim/.vimrc
 touch ~/.vimrc.local ( add your rc customizations here )

Instructions for Individual Features ( TODO )
------------------------------------
