Vim Setup ( setup mainly for Java )
-------------------------------------

A. Code Navigation
- Eclipse + Eclim [ JavaSearch, JavaSearchContext ] , grep, tags
- NERDTree / Command-T
- Minibufexplorer ( improved )
- Taglist + ctags ( ctags -R --language-force=java -f.tags src/ )

B. Code Editing
- yankring
- snipmate ( snippets )
- sorround.vim + repeat.vim
- Wikipedia
- Java 
-- Special function for computing package string
-- Use snipmate for class body to be completed with filename
-- Eclim logging configured to add logging infra automatically
-- Ecling :JavaConstuctor for all subsets of constructors
-- :JavaImpl / :JavaDelegate to provide and complete methods
-- :JavaImport for auto importing based on classpath
-- :JavaCorrect for correction suggestions
-- :JavaDocComment for auto JavaDoc comment insertion
-- :JavaFormat for formatting
-- snipmate for all code snippets

C. Edit-Compile-Edit cycles
- use eclim javac to point errors in buffer
- with correct Ant errorformat provides standard quickfix
- Eclim changes makeprg and efm every time after make, this is avoided by setting g:EclimJavaCompilerAutoDetect=0

D. Killer moves : 
- Use jumps - <C-o> / <C-i>
- Scope matching jumps with 'matchit'

E. Color : 
- Should use 256 color schemes
- xoria256, desert256
- Solarized is a great color scheme if you can painfully configure the terminal color palette

F. Plugin List
- Taglist 						[ https://github.com/vim-scripts/taglist.vim.git ]
- Minibufexplorer ( improved ) 	[ https://github.com/fholgado/minibufexpl.vim.git ] 
- Wikipedia 					[ https://github.com/vim-scripts/wikipedia.vim.git ]
- NerdTree 						[ https://github.com/scrooloose/nerdtree.git ]
- Eclim / Eclipse Helios 		[ https://github.com/ervandew/eclim.git ]
- Yankring 						[ https://github.com/chrismetcalf/vim-yankring.git ]
- Snipmate 						[ https://github.com/msanders/snipmate.vim.git ]
- snipmate-snippets  		    [ https://github.com/scrooloose/snipmate-snippets.git ]
- Sorround + Repeat 			[ https://github.com/tpope/vim-surround.git, https://github.com/tpope/vim-repeat.git ] 
- Matchit 						[ https://github.com/vim-scripts/matchit.zip.git ]
- Xoria256 						[ https://github.com/vim-scripts/xoria256.vim.git ]
- SuperTab 						[ https://github.com/ervandew/supertab.git ]
- Perforce 						[ ]
- Pathogen 						[ https://github.com/tpope/vim-pathogen.git ]
- Solarized 					[ https://github.com/altercation/vim-colors-solarized.git ] 
- Latex                         [ https://github.com/jcf/vim-latex.git/ ]

git submodule add git://github.com/tpope/vim-pathogen.git vim/vim-pathogen
git submodule add git://github.com/tpope/vim-surround.git vim/.vim/bundle/vim-surround
git submodule add git://github.com/tpope/vim-repeat.git vim/.vim/bundle/vim-repeat
git submodule add git://github.com/vim-scripts/matchit.zip.git vim/.vim/bundle/matchit
git submodule add git://github.com/vim-scripts/xoria256.vim.git vim/.vim/bundle/xoria256
git submodule add git://github.com/ervandew/supertab.git vim/.vim/bundle/supertab
git submodule add git://github.com/scrooloose/nerdtree.git vim/.vim/bundle/nerdtree
git submodule add git://github.com/vim-scripts/taglist.vim.git vim/.vim/bundle/taglist
git submodule add git://github.com/fholgado/minibufexpl.vim.git vim/.vim/bundle/minibufexpl
git submodule add git://github.com/vim-scripts/wikipedia.vim.git vim/.vim/bundle/wikipedia
git submodule add git://github.com/altercation/vim-colors-solarized.git vim/.vim/bundle/vim-colors-solarized
git submodule add git://github.com/chrismetcalf/vim-yankring.git vim/.vim/bundle/vim-yankring
git submodule add git://github.com/jcf/vim-latex.git vim/.vim/bundle/vim-latex

G. Vim Compile Options
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Jun 15 2011 13:06:57)
Compiled by sectorzero@sandeshd@gmail.com
Normal version with GTK2 GUI.  Features included (+) or not (-):
-arabic +autocmd +balloon_eval +browse +builtin_terms +byte_offset +cindent 
+clientserver +clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments 
-conceal +cryptv -cscope +cursorbind +cursorshape +dialog_con_gui +diff 
+digraphs +dnd -ebcdic -emacs_tags +eval +ex_extra +extra_search -farsi 
+file_in_path +find_in_path +float +folding -footer +fork() +gettext 
-hangul_input +iconv +insert_expand +jumplist -keymap -langmap +libcall 
+linebreak +lispindent +listcmds +localmap -lua +menu +mksession +modify_fname 
+mouse +mouseshape -mouse_dec +mouse_gpm -mouse_jsbterm -mouse_netterm 
-mouse_sysmouse +mouse_xterm +multi_byte +multi_lang -mzscheme +netbeans_intg 
-osfiletype +path_extra -perl +persistent_undo +postscript +printer -profile 
-python -python3 +quickfix +reltime -rightleft -ruby +scrollbind +signs 
+smartindent -sniff +startuptime +statusline -sun_workshop +syntax +tag_binary 
+tag_old_static -tag_any_white -tcl +terminfo +termresponse +textobjects +title
 +toolbar +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo 
+vreplace +wildignore +wildmenu +windows +writebackup +X11 -xfontset +xim 
+xsmp_interact +xterm_clipboard -xterm_save 
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
      user exrc file: "$HOME/.exrc"
  system gvimrc file: "$VIM/gvimrc"
    user gvimrc file: "$HOME/.gvimrc"
    system menu file: "$VIMRUNTIME/menu.vim"
  fall-back for $VIM: "/home/sandesh/Tools/vim/vim73/share/vim"
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H -DFEAT_GUI_GTK  -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12     -g -O2 -D_FORTIFY_SOURCE=1      
Linking: gcc -L/lib    -L/usr/local/lib -o vim   -L/lib -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -lglib-2.0   -lXt -lm -lncurses -lselinux -lacl -lgpm          

H. Brower Editing
- Google Chrome + TextAid + edit-server - really simple and cool!!
- Can work accorss remote machines

I. :scriptnames
  1: ~/cyanide/vim/.vimrc
  2: ~/vim/vim73/share/vim/vim73/filetype.vim
  3: ~/vim/vim73/share/vim/vim73/ftplugin.vim
  4: ~/vim/vim73/share/vim/vim73/indent.vim
  5: ~/vim/vim73/share/vim/vim73/syntax/syntax.vim
  6: ~/vim/vim73/share/vim/vim73/syntax/synload.vim
  7: ~/vim/vim73/share/vim/vim73/syntax/syncolor.vim
  8: ~/cyanide/vim/.vim/autoload/pathogen.vim
  9: ~/cyanide/vim/.vim/bundle/xoria256/colors/xoria256.vim
 10: ~/cyanide/vim/eclim/eclim-1.6.3/plugin/eclim.vim
 11: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/plugin/common.vim
 12: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/plugin/eclim.vim
 13: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/autoload/eclim/cygwin.vim
 14: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/plugin/ftdetect.vim
 15: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/plugin/java_tools.vim
 16: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/plugin/largefile.vim
 17: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/plugin/make.vim
 18: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/plugin/project.vim
 19: ~/cyanide/vim/.vim/bundle/matchit/plugin/matchit.vim
 20: ~/cyanide/vim/.vim/bundle/minibufexpl/plugin/minibufexpl.vim
 21: ~/cyanide/vim/.vim/bundle/nerdtree/plugin/NERD_tree.vim
 22: ~/cyanide/vim/.vim/bundle/supertab/plugin/supertab.vim
 23: ~/cyanide/vim/.vim/bundle/taglist/plugin/taglist.vim
 24: ~/cyanide/vim/.vim/bundle/vim-surround/plugin/surround.vim
 25: ~/cyanide/vim/.vim/bundle/vim-yankring/plugin/yankring.vim
 26: ~/vim/vim73/share/vim/vim73/plugin/getscriptPlugin.vim
 27: ~/vim/vim73/share/vim/vim73/plugin/gzip.vim
 28: ~/vim/vim73/share/vim/vim73/plugin/matchparen.vim
 29: ~/vim/vim73/share/vim/vim73/plugin/netrwPlugin.vim
 30: ~/vim/vim73/share/vim/vim73/plugin/rrhelper.vim
 31: ~/vim/vim73/share/vim/vim73/plugin/spellfile.vim
 32: ~/vim/vim73/share/vim/vim73/plugin/tarPlugin.vim
 33: ~/vim/vim73/share/vim/vim73/plugin/tohtml.vim
 34: ~/vim/vim73/share/vim/vim73/plugin/vimballPlugin.vim
 35: ~/vim/vim73/share/vim/vim73/plugin/zipPlugin.vim
 36: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/autoload/eclim/display/signs.vim
 37: ~/cyanide/vim/.vim/bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim
 38: ~/cyanide/vim/.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim
 39: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/autoload/eclim/util.vim
 40: ~/cyanide/vim/eclim/eclim-1.6.3/eclim/autoload/eclim/vimplugin.vim
 41: ~/vim/vim73/share/vim/vim73/scripts.vim

 J. TODO
 - Snipmate
 - Wikipedia

 I. Experimental
 - vim-fugitive ( https://github.com/tpope/vim-fugitive )
git submodule add git://github.com/tpope/vim-fugitive.git vim/.vim/bundle/vim-fugitive

J. References
http://vimcasts.org/episodes/synchronizing-plugins-with-git-submodules-and-pathogen/

K. How does completion happen in vim
Basic concept :
- When editing - i.e during insertion mode, completion functions can be invoked as per 'ins-completion'
- 'ins-completion' gives various access to various 'functions' for completion which provide different behaviour for the same context.
- The completion functions desribed in 'ins-completion' are either provided by Vim or can be defined as a user function.
- Basically the only thing one needs to understand is that you can invoke 'completion behaviours' using 'functions' in 'insert mode'
- 'user completion / completefunc' and 'omni completion/ omnifunc' are hooks where special and complex user defined functions can be used
- The above framework is provided by Vim, the rest of the magic is all user defined behaviour
- Objects are : insert mode, insertion/text context, completion invocation event, completion functions
User defined completion functions :
- User / Omni ( not sure of the diff or if there is any )
- Eg. OmniCppComplete, Eclim etc.
Invocation Helpers :
- Since one needs to remember different mappings for invoking different completion behaviours, there are plugins which try to make this user friendly
- Eg. SuperTab - tries to provide a simple one-stroke interface to completion functions ( which can be confusing at first )



